---
project_name: '{{slug}}'

env:
  - GOVERSION="$(go version)"

before:
  hooks:
    - go mod tidy

build:
  binary: '{{binName}}'
  main: '{{buildMain}}'
  goos:
    - windows
    - darwin
    - linux
  goarch:
    - 386
    - amd64
    - arm
    - arm64
  goarm:
    - 6
  ignore:
    - goos: darwin
      goarch: 386
  env:
    - CGO_ENABLED=0
  ldflags:
    # yamllint disable-line rule:line-length
    - '{{{buildLdflags}}}'

gomod:
  proxy: {{gomodProxy}}
  env:
    - GORELEASER_CURRENT_TAG={{#if currentBuildTag}}{{currentBuildTag}}{{else}}v{{version}}{{/if}}

archives:
  - files:
      - README.md
      - LICENSE
      - completion/**/*
    format_overrides:
      - goos: windows
        format: zip
    replacements:
      amd64: x86_64
      386: x86_32
      darwin: macos

universal_binaries:
  - replace: true

release:
  disable: true

snapshot:
  name_template: '\{{.Tag}}'

checksum:
  name_template: CHECKSUMS.txt

nfpms:
  - id: default
    vendor: '{{company}}'
    homepage: '{{link.home}}'
    maintainer: '{{organization}} <{{email.help}}>'
    description: '{{description}}'
    license: '{{license}}'
    formats:
      - apk
      - deb
      - rpm
    recommends:
      - git
    suggests:
      - docker
      - jq
      - yq
    replacements:
      amd64: x86_64
      386: x86_32
      darwin: macos

snapcrafts:
  - id: default
    publish: true
    summary: '{{description}}'
    # yamllint disable-line rule:line-length
    description: '{{overview}}'
    replacements:
      amd64: x86_64
      386: x86_32
      darwin: macos
    confinement: '{{snapConfinement}}'
    license: '{{license}}'
    extra_files:
      - source: completion
        destination: completion
        mode: 0755

dockers:
  - goos: linux
    goarch: amd64
    image_templates:
      - '{{profile.dockerhub}}/\{{.ProjectName}}'
      - '{{profile.dockerhub}}/\{{.ProjectName}}:\{{.Tag}}'
      - '{{profile.dockerhub}}/\{{.ProjectName}}:v\{{ .Major }}'
    dockerfile: .config/Dockerfile
    use: buildx
    build_flag_templates:
      - --platform=linux/amd64

brews:
  - name: '{{binName}}'
    description: '{{description}}'
    license: '{{license}}'
    homepage: '{{link.home}}'
    folder: '{{homebrew.folder}}'
    tap:
      owner: '{{homebrew.owner}}'
      name: '{{homebrew.name}}'
    test: '{{homebrew.test}}'
    install: |-
      bin.install "{{binName}}"
      bash_completion.install "completion/bash/{{binName}}.bash" => "{{binName}}"
      zsh_completion.install "completion/zsh/_{{binName}}" => "_{{binName}}"
      fish_completion.install "completion/fish/{{binName}}.fish"

announce:
  skip: '\{{gt .Patch 0}}'
  linkedin:
    enabled: false
    message_template: '{{name}} \{{ .Tag }} is out! Check it out at \{{ .ReleaseURL }}.'
  reddit:
    enabled: false
    application_id: '{{redditApplicationId}}'
    username: '{{redditUsername}}'
    url_template: '{{repository.github}}/releases/tag/\{{ .Tag }}'
    title_template: '{{name}} \{{ .Tag }} was just released!'
  slack:
    enabled: true
    message_template: '**[{{name}}]({{repository.github}})** \{{.Tag}} is out! Check it out at \{{.ReleaseURL}}.'
    channel: '{{slackNotificationChannel}}'
    username: '{{slackNotificationUsername}}'
    icon_url: '{{slackNotificationIcon}}'
  teams:
    enabled: false
    title_template: '{{name}} \{{ .Tag }} has been released!'
    message_template: '{{name}} \{{ .Tag }} is out! Check it out at \{{ .ReleaseURL }}.'
    color: '{{teamsNotificationColor}}'
    icon_url: '{{teamsNotificationIcon}}'
  twitter:
    enabled: false
    message_template: '{{name}} \{{ .Tag }} is out with new features! Check it out at \{{ .ReleaseURL }}.'
